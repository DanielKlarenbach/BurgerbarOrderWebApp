{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-dish/add-dish.component.ts","./src/app/add-dish/add-dish.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-contact-data/edit-contact-data.component.ts","./src/app/edit-contact-data/edit-contact-data.component.html","./src/app/home/footer/footer.component.ts","./src/app/home/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/main/dish-list/dish-list.component.ts","./src/app/home/main/dish-list/dish-list.component.html","./src/app/home/main/dish-list/dish/dish.component.ts","./src/app/home/main/dish-list/dish/dish.component.html","./src/app/home/main/dish-list/pagination/pagination.component.ts","./src/app/home/main/dish-list/pagination/pagination.component.html","./src/app/home/main/main.component.ts","./src/app/home/main/main.component.html","./src/app/home/main/menu/menu-item/menu-item.component.ts","./src/app/home/main/menu/menu-item/menu-item.component.html","./src/app/home/main/menu/menu.component.ts","./src/app/home/main/menu/menu.component.html","./src/app/home/navbar/navbar.component.ts","./src/app/home/navbar/navbar.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/contactData.ts","./src/app/models/dish.ts","./src/app/models/orderItem.ts","./src/app/models/user.ts","./src/app/orders/order-list/order-dish-list/order-dish-list/order-dish-list.component.ts","./src/app/orders/order-list/order-dish-list/order-dish-list/order-dish-list.component.html","./src/app/orders/order-list/order-list-item/order-list-item.component.ts","./src/app/orders/order-list/order-list-item/order-list-item.component.html","./src/app/orders/order-list/order-list.component.ts","./src/app/orders/order-list/order-list.component.html","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth-service/auth.service.ts","./src/app/services/http-interceptor/httpinterceptor.service.ts","./src/app/services/shopping-cart/shopping-cart.service.ts","./src/app/shopping-cart/bill/bill.component.ts","./src/app/shopping-cart/bill/bill.component.html","./src/app/shopping-cart/shopping-cart-list/shopping-cart-item/shopping-cart-item.component.ts","./src/app/shopping-cart/shopping-cart-list/shopping-cart-item/shopping-cart-item.component.html","./src/app/shopping-cart/shopping-cart-list/shopping-cart-list.component.ts","./src/app/shopping-cart/shopping-cart-list/shopping-cart-list.component.html","./src/app/shopping-cart/shopping-cart.component.ts","./src/app/shopping-cart/shopping-cart.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { Dish } from '../models/dish';\nimport { HttpClient } from '@angular/common/http';\nimport {Category} from '../models/category';\n\n@Component({\n  selector: 'app-add-dish',\n  templateUrl: './add-dish.component.html',\n  styleUrls: ['./add-dish.component.css']\n})\nexport class AddDishComponent implements OnInit {\n  categories: Category[];\n  addName: string;\n  price: number;\n  description: string;\n  category: string;\n\n  deleteName: string;\n\n  constructor( private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<Category[]>('http://localhost:8081/categories');\n    obs.subscribe((response) =>  this.categories=response);\n  }\n  \n  addDish(): void{\n    let dish = new Dish(this.addName,this.description,this.price, this.category);\n    let obs=this.http.post<Dish>('http://localhost:8081/edit/adddish',dish);\n    obs.subscribe((response) =>  console.log(response));\n\n  }\n\n  deleteDish(): void{\n    let obs=this.http.delete('http://localhost:8081/edit/deletedish/'+this.deleteName);\n    obs.subscribe((response) =>  console.log(response));\n  }\n\n}\n","<div class=\"container\" id=\"edit-dish-list\">\n    <app-navbar></app-navbar>\n    <div class=\"row top-buffer-20px\">\n        <form class=\"col-6\">\n            <h4>Dodaj danie</h4>\n            <div class=\"form-group\">\n                <label for=\"email\">Nazwa:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"addName\" name=\"addName\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"comment\">Opis:</label>\n                <textarea class=\"form-control\" [(ngModel)]=\"description\" name=\"description\" rows=\"5\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Cena:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"price\" name=\"price\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"sel1\">Kategoria:</label>\n                <select class=\"form-control\" [(ngModel)]=\"category\" name=\"category\">\n                    <option *ngFor=\"let category of categories\">{{category.name}}</option>\n                </select>\n            </div>\n            <button (click)=\"addDish()\" class=\"btn btn-success\">Wyślij</button>\n        </form>\n        <form class=\"col-6\">\n            <h4>Usuń danie</h4>\n            <div class=\"form-group\">\n                <label for=\"email\">Nazwa:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"deleteName\" name=\"deleteName\">\n            </div>\n            <button (click)=\"deleteDish()\" class=\"btn btn-danger\">Wyślij</button>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AddDishComponent } from './add-dish/add-dish.component';\nimport { EditContactDataComponent } from './edit-contact-data/edit-contact-data.component';\nimport { OrdersComponent } from './orders/orders.component';\n\nconst routes: Routes = [\n  { path:'', component:HomeComponent},\n  { path:'home', component:HomeComponent},\n  { path:'login', component: LoginComponent},\n  { path:'shopping-cart', component: ShoppingCartComponent},\n  { path:'register', component: RegisterComponent},\n  { path: 'add-dish', component: AddDishComponent },\n  { path: 'edit-contact-data', component: EditContactDataComponent},\n  { path: 'orders', component:OrdersComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BurgerbarOrderWebApp';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './home/navbar/navbar.component';\nimport { FooterComponent } from './home/footer/footer.component';\nimport { MenuComponent } from './home/main/menu/menu.component';\nimport { DishListComponent } from './home/main/dish-list/dish-list.component';\nimport { MenuItemComponent } from './home/main/menu/menu-item/menu-item.component';\nimport { DishComponent } from './home/main/dish-list/dish/dish.component';\nimport { MainComponent } from './home/main/main.component';\nimport { PaginationComponent } from './home/main/dish-list/pagination/pagination.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from './services/auth-service/auth.service';\nimport { ShoppingCartService } from './services/shopping-cart/shopping-cart.service';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { ShoppingCartItemComponent } from './shopping-cart/shopping-cart-list/shopping-cart-item/shopping-cart-item.component';\nimport { ShoppingCartListComponent } from './shopping-cart/shopping-cart-list/shopping-cart-list.component';\nimport {HttpInterceptorService} from './services/http-interceptor/httpinterceptor.service';\nimport { RegisterComponent } from './register/register.component';\nimport { AddDishComponent } from './add-dish/add-dish.component';\nimport { EditContactDataComponent } from './edit-contact-data/edit-contact-data.component';\nimport { BillComponent } from './shopping-cart/bill/bill.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderListComponent } from './orders/order-list/order-list.component';\nimport { OrderListItemComponent } from './orders/order-list/order-list-item/order-list-item.component';\nimport { OrderDishListComponent } from './orders/order-list/order-dish-list/order-dish-list/order-dish-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    MenuComponent,\n    DishListComponent,\n    MenuItemComponent,\n    DishComponent,\n    MainComponent,\n    PaginationComponent,\n    HomeComponent,\n    LoginComponent,\n    ShoppingCartComponent,\n    ShoppingCartItemComponent,\n    ShoppingCartListComponent,\n    RegisterComponent,\n    AddDishComponent,\n    EditContactDataComponent,\n    BillComponent,\n    OrdersComponent,\n    OrderListComponent,\n    OrderListItemComponent,\n    OrderDishListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [AuthService, ShoppingCartService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {ContactData} from '../models/contactData'\n\n@Component({\n  selector: 'app-edit-contact-data',\n  templateUrl: './edit-contact-data.component.html',\n  styleUrls: ['./edit-contact-data.component.css']\n})\nexport class EditContactDataComponent implements OnInit {\n  email: string;\n  phoneNumber: string;\n  description: string;\n  address: string;\n\n  constructor( private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n  \n  editContactData(): void{\n    let contactData = new ContactData(this.phoneNumber,this.email,this.address, this.description);\n    let obs=this.http.put<ContactData>('http://localhost:8081/edit/editcontactdata',contactData);\n    obs.subscribe((response) =>  console.log(response));\n\n  }\n}\n","<div class=\"container\" id=\"edit-contacit-data\">\n    <app-navbar></app-navbar>\n    <div class=\"row top-buffer-20px\">\n        <form class=\"col-6\">\n            <h4>Edytuj dane kontaktowe</h4>\n            <div class=\"form-group\">\n                <label for=\"email\">Numer telefonu:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"phoneNumber\" name=\"phoneNumber\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"comment\">Opis:</label>\n                <textarea class=\"form-control\" [(ngModel)]=\"description\" name=\"description\" rows=\"5\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Adres:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"address\" name=\"address\">\n            </div>\n            <button (click)=\"editContactData()\" class=\"btn btn-success\">Wyślij</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContactData } from 'src/app/models/contactData';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  contactData: ContactData;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<ContactData>('http://localhost:8081/contactdata'); \n    obs.subscribe((response) =>  \n    {\n      this.contactData=response;\n    });\n  }\n}\n","<div class=\"bottom-buffer-10px card bg-light top-buffer-20px\" id=\"footer\">\n    <div class=\"card-body\">\n        <h4>{{contactData.phoneNumber}}</h4>\n        <h4>{{contactData.email}}</h4>\n        <h4>{{contactData.address}}</h4>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" id=\"content\">\n    <app-navbar></app-navbar>\n    <app-main></app-main>\n    <app-footer></app-footer>\n</div>","import { Component, OnInit, Input, OnChanges, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Dish } from 'src/app/models/dish';\n\n\n@Component({\n  selector: 'app-dish-list',\n  templateUrl: './dish-list.component.html',\n  styleUrls: ['./dish-list.component.css']\n})\nexport class DishListComponent implements OnInit, OnChanges {\n  @Input() currentCategory: string;\n  dishes: Dish[];\n  currentPage: number = 1;\n  numberOfPages: number;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<Dish[]>('http://localhost:8081/dishes');\n    obs.subscribe((response) => {\n      this.dishes = response;\n      this.currentPage = 1;\n      this.numberOfPages = Math.ceil(this.dishes.length / 6) + 1;\n    });\n  }\n\n  ngOnChanges(): void {\n    if (!(this.currentCategory == null)) {\n      let obs = this.http.get<Dish[]>('http://localhost:8081/dishes/' + this.currentCategory);\n      obs.subscribe((response) => {\n        this.dishes = response;\n        this.currentPage = 1;\n        this.numberOfPages = Math.ceil(this.dishes.length / 6);\n      });\n    }\n  }\n\n  setCurrentCategoryIndex($event): void {\n    this.currentPage = $event;\n  }\n\n  checkPage(index: number): boolean {\n    if (index >= (this.currentPage - 1) * 6 && index < (this.currentPage - 1) * 6 + 6) return true;\n    else return false;\n  }\n}\n","<div id=\"dish-list\">\n    <div *ngFor=\"let dish of dishes, index as i\">\n        <app-dish *ngIf=\"checkPage(i)\" [dish]=\"dish\"></app-dish>\n    </div>\n    <app-pagination [numberOfPages]=\"numberOfPages\" (pageIndex)=\"setCurrentCategoryIndex($event)\"></app-pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Dish } from 'src/app/models/dish';\nimport { OrderItem } from 'src/app/models/orderItem';\nimport { ShoppingCartService } from 'src/app/services/shopping-cart/shopping-cart.service';\n\n@Component({\n  selector: 'app-dish',\n  templateUrl: './dish.component.html',\n  styleUrls: ['./dish.component.css']\n})\nexport class DishComponent implements OnInit {\n  @Input() dish: Dish;\n  quantity: number;\n\n  constructor(private shoppingCart: ShoppingCartService) { }\n\n  ngOnInit(): void {\n  }\n\n  addToCart(): boolean{\n    this.shoppingCart.addToCart(new OrderItem(this.dish,this.quantity));\n    console.log(this.dish)\n    this.quantity=0;\n    return false;\n  }\n}\n","<div class=\"dish bottom-buffer-10px card\">\n    <div class=\"card-body\">\n        <h2 class=\"name card-title\">{{dish.name}}</h2>\n        <h4 class=\"price card-subtitle\">{{dish.price}} zł</h4>\n        <p class=\"description card-text\">{{dish.description}}</p>\n        <a  href=\"#\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#quantityModal\">Dodaj do koszyka</a>\n    </div>\n    <div class=\"modal\" id=\"quantityModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Podaj ilość</h4>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <form>\n                        <div class=\"form-group\">\n                            <input type=\"email\" class=\"form-control\" [(ngModel)]=\"quantity\" id=\"quantity\" name=\"quantity\">\n                          </div>    \n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button (click)=\"addToCart()\" type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Zamknij</button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Output,Input, EventEmitter, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit, OnChanges {\n  @Output() pageIndex=new EventEmitter<number>();\n  localPageIndex: number=1;\n  @Input() numberOfPages;\n  pages: number[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.pages=Array(this.numberOfPages).fill(0).map((x,i)=>i); \n  }\n\n  ngOnChanges(): void{\n    this.pages=Array(this.numberOfPages).fill(0).map((x,i)=>i); \n    this.localPageIndex=1;\n  }\n\n  showPage(pageIndex: number): boolean{\n    this.localPageIndex=pageIndex;\n    this.pageIndex.emit(pageIndex);\n    return false;\n  }\n\n  previousPage(): boolean{\n    this.localPageIndex=this.localPageIndex-1;\n    this.pageIndex.emit(this.localPageIndex);\n    return false;\n  }\n\n  nextPage(): boolean{\n    this.localPageIndex=this.localPageIndex+1;\n    this.pageIndex.emit(this.localPageIndex);\n    return false;\n  }\n\n}\n","<div class=\"top-buffer-5px\" id=\"pagination\">\n    <nav>\n        <ul class=\"pagination justify-content-center\">\n            <li *ngIf=\"localPageIndex!=1\"><a (click)=\"previousPage()\" class=\"page-link\" href=\"#\">&laquo;</a></li>\n            <li *ngFor=\"let page of pages\" (click)=\"showPage(page+1)\" class=\"page-item\"><a class=\"page-link\" href=\"#\">{{page+1}}</a></li>\n            <li *ngIf=\"localPageIndex!=(pages[pages.length-1]+1)\" (click)=\"nextPage()\" class=\"page-item\"><a class=\"page-link\" href=\"#\">&raquo;</a></li>\n        </ul>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  currentCategory: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setCurrentCategory($event){\n    this.currentCategory=$event;\n  }\n}\n","<div class=\"row top-buffer-20px\" id=\"main\">\n    <app-menu class=\"col-3\" (currentCategory)=\"setCurrentCategory($event)\"></app-menu>\n    <app-dish-list class=\"col-9\" [currentCategory]=\"currentCategory\"></app-dish-list>\n</div>\n","import { Component, OnInit, Input, OnChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.css']\n})\nexport class MenuItemComponent implements OnInit {\n  @Input('name') name: String;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<a class=\"category list-group-item list-group-item-action\">{{name}}</a>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Category} from 'src/app/models/category';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  categories: Category[];\n  @Output() currentCategory = new EventEmitter<string>();\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<Category[]>('http://localhost:8081/categories');\n    obs.subscribe((response) =>  this.categories=response);\n  }\n\n  showCategory(category: string): void{\n    this.currentCategory.emit(category);\n  }\n}\n","<div class=\"list-group\" id=\"menu\">\n    <a href=\"/home\" class=\"category list-group-item list-group-item-action active\">Menu</a>\n    <app-menu-item *ngFor=\"let category of categories\" [name]=\"category.name\" (click)=\"showCategory(category.name)\"></app-menu-item>\n</div>","import { Component, OnInit, OnChanges, DoCheck } from '@angular/core';\nimport { AuthService } from '../../services/auth-service/auth.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit,DoCheck {\n  userName: string;\n  roles: string;\n\n  constructor(private authenticationService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngDoCheck(): void{\n    this.userName=sessionStorage.getItem('authenticatedUser');\n    this.roles=sessionStorage.getItem('roles');\n  }\n\n  handleLogout() {\n    this.authenticationService.logout();\n  }\n\n}\n","<nav class=\"row top-buffer-20px navbar navbar-expand bg-primary navbar-dark\">\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item active\">\n      <a class=\"nav-link\" href=\"/home\">JohnnyBurger</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\">Kontakt</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\">O nas</a>\n    </li>\n    <li class=\"nav-item\">\n      <div *ngIf=\"userName && roles==='ROLE_ADMIN'\" class=\"dropdown\">\n        <button class=\"btn btn-info dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          Edytuj\n        </button>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" routerLink=\"/add-dish\">Listę dań</a>\n          <a class=\"dropdown-item\" routerLink=\"/edit-contact-data\">Dane kontaktowe</a>\n        </div>\n      </div>\n    </li>\n    <li class=\"nav-item\">\n        <a *ngIf=\"userName && roles==='ROLE_STAFF'\" class=\"nav-link\" routerLink=\"/orders\">Zamówienia</a>\n    </li>\n  </ul>\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a *ngIf=\"userName\" class=\"nav-link\" routerLink=\"/home\">{{userName}}</a>\n    </li>\n    <li class=\"nav-item\">\n      <img *ngIf=\"userName  && roles==='ROLE_USER'\" class=\"shopping-cart\" src=\"../../assets/shopping-cart.png\"\n        routerLink=\"/shopping-cart\">\n    </li>\n    <li class=\"nav-item\">\n      <div *ngIf=\"userName; then thenBlock else elseBlock\"></div>\n      <ng-template #thenBlock>\n        <button class=\"btn btn-success\" (click)=\"handleLogout()\" routerLink=\"/home\">Wyloguj się</button>\n      </ng-template>\n      <ng-template #elseBlock>\n        <button class=\"btn btn-success\" routerLink=\"/login\">Zaloguj się</button>\n      </ng-template>\n    </li>\n  </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../services/auth-service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password : string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  invalidLogin = false;\n  loginSuccess = false;\n\n  constructor(private route: ActivatedRoute,private router: Router,private authenticationService: AuthService) {   }\n\n  ngOnInit() {\n  }\n\n  handleLogin() {\n    this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\n      this.invalidLogin = false;\n      this.loginSuccess = true;\n      this.successMessage = 'Login Successful.';\n      this.router.navigate(['/home']);\n    }, () => {\n      this.invalidLogin = true;\n      this.loginSuccess = false;\n    });      \n  }\n\n}\n","<div class=\"login container col-6\">\n  <h1 class=\"text-center\">Login</h1>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <form>\n        <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div>\n        <div class=\"alert alert-success\" *ngIf='loginSuccess'>{{successMessage}}</div>\n        <div class=\"form-group\">\n          <label for=\"email\">Nazwa użytkownika:</label>\n          <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\"\n            placeholder=\"Wpisz nazwę użytkownika\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"pwd\">Hasło:</label>\n          <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"Wpisz hasło\"\n            name=\"password\">\n        </div>\n        <div class=\"row justify-content-between\">\n          <a class=\"col-auto\" routerLink=\"/register\">Zarejestruj się</a>\n          <div class=\"col-auto\">\n            <button (click)=handleLogin() routerLink=\"/login\" class=\"btn btn-success\">Zaloguj się</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","export class ContactData{\n    id: number=1;\n    phoneNumber: String;\n    email: String;\n    address: String;\n    description: String;\n\n    constructor(phoneNumber: string, email: string, address: string, description: string){\n        this.phoneNumber=phoneNumber;\n        this.email=email;\n        this.address=address;\n        this.description=description;\n    }\n}","export class Dish{\n    id: number;\n    name: string;\n    description: string;\n    price: number;\n    category: string;\n\n    constructor(name: string, description: string, price: number, category: string){\n        this.name=name;\n        this.description=description;\n        this.price=price;\n        this.category=category;\n    }\n}","import {Dish} from './dish'\n\nexport class OrderItem{\n    dish: Dish;\n    quantity: number;\n\n    constructor(dish: Dish, quantity: number){\n        this.dish=dish;\n        this.quantity=quantity;\n    }\n}","export class User{\n    name: string;\n    password: string;\n    roles: string;\n\n    constructor(name: string, password: string) {\n        this.name=name;\n        this.password=password;\n     }\n\n}","import { Component, OnInit,Input } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nimport { HttpClient } from '@angular/common/http';\nimport { OrderItem } from 'src/app/models/orderItem';\n\n@Component({\n  selector: '[app-order-dish-list]',\n  templateUrl: './order-dish-list.component.html',\n  styleUrls: ['./order-dish-list.component.css']\n})\nexport class OrderDishListComponent implements OnInit {\n  @Input() order: Order;\n  orderItems: OrderItem[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<OrderItem[]>('http://localhost:8081/activeorders/'+this.order.id);\n    obs.subscribe((response) => {\n      this.orderItems = response;\n    });\n  }\n\n}\n","<div class=\"table-responsive\">\n    <table mdbTable class=\"table table-borderless table-condensed\">\n        <thead>\n            <th>Nazwa</th>\n            <th>Ilość</th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let orderItem of orderItems\">\n                <td>{{orderItem.dish.name}}</td>\n                <td>{{orderItem.quantity}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit, Input,  Output, EventEmitter } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nimport { HttpClient } from '@angular/common/http';\nimport { OrderItem } from 'src/app/models/orderItem';\n\n\n@Component({\n  selector: '[app-order-list-item]',\n  templateUrl: './order-list-item.component.html',\n  styleUrls: ['./order-list-item.component.css']\n})\nexport class OrderListItemComponent implements OnInit {\n  @Input() order: Order;\n  orderItems: OrderItem[];\n  @Output() endOrderEvent = new EventEmitter<string>();\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<OrderItem[]>('http://localhost:8081/activeorders/'+this.order.id);\n    obs.subscribe((response) => {\n      this.orderItems = response;\n    });\n  }\n\n  endOrder(): void{\n    console.log(\"endorder\")\n    this.order.isActive=false;\n    let obs = this.http.put<Order>('http://localhost:8081/endorder',this.order);\n    obs.subscribe((response) => {\n      console.log(response);\n      this.endOrderEvent.emit(\"true\");\n    });\n\n  }\n\n}\n","<td>{{order.id}}</td>\n<td>{{order.user.name}}</td>\n<td>{{order.date | date :'short'}}</td>\n<td> \n    <button (click)=\"endOrder()\" class=\"btn btn-danger\">Zakończ</button>\n</td>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Order } from '../../models/order'\n\n\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n  orders: Order[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    let obs = this.http.get<Order[]>('http://localhost:8081/activeorders');\n    obs.subscribe((response) => {\n      this.orders = response;\n    });\n  }\n\n  getActiveOrders(){\n    let obs = this.http.get<Order[]>('http://localhost:8081/activeorders');\n    obs.subscribe((response) => {\n      this.orders = response;\n    });\n  }\n}\n","<div class=\"top-buffer-20px table-hover table-reponsive\">\n    <h2>Zamówienia</h2>\n    <table mdbTable class=\"table\">\n        <thead>\n            <tr>\n                <th>Id</th>\n                <th>Zamawiający</th>\n                <th>Data</th>\n            </tr>\n        </thead>\n        <tbody>\n             <ng-container *ngFor=\"let order of orders\">\n                <tr role=\"button\" data-toggle=\"collapse\" (endOrderEvent)=\"getActiveOrders()\" [attr.data-target]=\"'#d'+order.id\" app-order-list-item [order]=\"order\"></tr>\n                <tr class=\"collapse\" [id]=\"'d'+order.id\" app-order-dish-list [order]=\"order\"></tr> \n             </ng-container>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" id=\"orders\">\n    <app-navbar></app-navbar>\n    <div class=\"row\">\n        <app-order-list class=\"col-12\"></app-order-list>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {User} from '../models/user'\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  username: string;\n  password : string;\n  secondPassword: string;\n\n  constructor(private route: ActivatedRoute,private router: Router, private http: HttpClient ) {   }\n\n  ngOnInit(): void {\n  }\n\n  handleRegistration(): void{\n    let obs=this.http.post<User>('http://localhost:8081/register',new User(this.username,this.password));\n    obs.subscribe((response) =>  console.log(response));\n  }\n}\n","<div class=\"register container col-6\">\n    <h1 class=\"text-center\">Zarejestruj się</h1>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"email\">Nazwa użytkownika:</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" placeholder=\"Wpisz nazwę użytkownika\"\n              name=\"username\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"pwd\">Hasło:</label>\n            <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"Wpisz hasło\"\n              name=\"password\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"pwd\">Powtórz hasło:</label>\n            <input type=\"password\" class=\"form-control\" [(ngModel)]=\"secondPassword\" id=\"secondPassword\" placeholder=\"Wpisz hasło\"\n              name=\"password\">\n          </div>\n          <button (click)=handleRegistration() routerLink=\"/login\" class=\"btn btn-success\">Zarejestruj się</button>\n        </form>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport{User} from '../../models/user'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // BASE_PATH: 'http://localhost:8081'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  authenticationService(username: String, password: String) {\n    return this.http.get<User>(`http://localhost:8081/login`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password,res.roles);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password,roles) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n    sessionStorage.setItem(\"password\",password);\n    sessionStorage.setItem(\"roles\",roles);\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user;\n  }\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../auth-service/auth.service';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(sessionStorage.getItem('authenticatedUser') + \":\" + sessionStorage.getItem('password'))}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {Dish} from '../../models/dish'\nimport {OrderItem} from '../../models/orderItem'\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n  order: OrderItem[]= new Array();\n\n  constructor(private http: HttpClient) { }\n\n  addToCart(orderItem: OrderItem): void{\n    this.order.push(orderItem);\n  }\n\n  getOrder(): OrderItem[]{\n    return this.order;\n  }\n\n  sendOrder(): void{\n    let obs = this.http.post<OrderItem[]>('http://localhost:8081/order',this.order);\n    obs.subscribe(() =>  console.log(\"got response\"));\n    this.order=[];\n  }\n}\n","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { ShoppingCartService } from '../../services/shopping-cart/shopping-cart.service';\n\n@Component({\n  selector: 'app-bill',\n  templateUrl: './bill.component.html',\n  styleUrls: ['./bill.component.css']\n})\nexport class BillComponent implements OnInit {\n  toPay: number;\n\n  constructor(public shoppingCart: ShoppingCartService) { }\n\n  ngOnInit(): void {\n    this.toPay=this.countBill();\n  }\n\n  countBill(): number{\n    let sum: number=0;\n    for(let orderItem of this.shoppingCart.getOrder()) sum+=orderItem.dish.price*orderItem.quantity;\n    console.log(this.shoppingCart.getOrder())\n    return sum;\n  }\n}\n","<div class=\"card top-buffer-20px\">\n    <div class=\"card-body\">\n        <h3 class=\"name card-title\">Do zapłaty:</h3>\n        <h4 class=\"description card-text text-right\"><span class=\"badge badge-danger\">{{toPay}} zł</span></h4>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Dish } from 'src/app/models/dish';\nimport { OrderItem } from 'src/app/models/orderItem';\n\n@Component({\n  selector: '[app-shopping-cart-item]',\n  templateUrl: './shopping-cart-item.component.html',\n  styleUrls: ['./shopping-cart-item.component.css']\n})\nexport class ShoppingCartItemComponent implements OnInit {\n  @Input() orderItem: OrderItem;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<td>{{orderItem.dish.name}}</td>\n<td>{{orderItem.dish.price}} zł</td>\n<td>{{orderItem.quantity}}</td>","import { Component, OnInit } from '@angular/core';\nimport { ShoppingCartService } from '../../services/shopping-cart/shopping-cart.service';\n\n\n@Component({\n  selector: 'app-shopping-cart-list',\n  templateUrl: './shopping-cart-list.component.html',\n  styleUrls: ['./shopping-cart-list.component.css']\n})\nexport class ShoppingCartListComponent implements OnInit {\n\n  constructor(public shoppingCart: ShoppingCartService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"shopping-cart-list\" class=\"top-buffer-20px table-striped table-reponsive\">\n    <h2>Twoje zamówienie</h2>\n    <table mdbTable class=\"table\">\n        <thead>\n            <tr>\n                <th>Nazwa</th>\n                <th>Cena</th>\n                <th>Ilość</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let orderItem of shoppingCart.getOrder()\" app-shopping-cart-item [orderItem]=\"orderItem\">\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport {ShoppingCartService} from '../services/shopping-cart/shopping-cart.service'\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  constructor(private shoppingCartService: ShoppingCartService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendOrder(): void{\n    this.shoppingCartService.sendOrder();\n  }\n\n}\n","<div class=\"container\" id=\"shopping-cart\">\n    <app-navbar></app-navbar>\n    <div class=\"row\">\n        <app-shopping-cart-list class=\"col-9\"></app-shopping-cart-list>\n        <app-bill class=\"col-3\"></app-bill>\n    </div>\n    <a (click)=\"sendOrder()\" routerLink=\"/home\"  class=\"top-buffer-10px btn btn-danger\">Wyślij</a>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}